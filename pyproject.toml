[tool.poetry]
name = "pylottie"
version = "2024"
license = "mit"
description = "Convert .tgs and .lottie to .webp or .gif using playwright."
authors = ["FredHappyface"]
classifiers = [
	"Development Status :: 5 - Production/Stable",
	"Intended Audience :: Developers",
	"Intended Audience :: Education",
	"Natural Language :: English",
	"Operating System :: OS Independent",
	"Programming Language :: Python :: Implementation :: CPython",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Utilities",
	"Topic :: Multimedia :: Graphics"
]
homepage = "https://github.com/FHPythonUtils/PyLottie"
repository = "https://github.com/FHPythonUtils/PyLottie"
documentation = "https://github.com/FHPythonUtils/PyLottie/blob/master/README.md"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
Pillow = "<11,>=10.2.0"
playwright = "<2,>=1.42.0"
install-playwright = "<2,>=0.0.1"

[tool.poetry.dev-dependencies]
imgcompare = "^2.0.1"
pytest = "^8.1.1"
handsdown = "^2.1.0"
coverage = "^7.4.4"
ruff = "^0.3.3"
pyright = "^1.1.354"

[tool.poetry.scripts]
pylottie = 'pylottie:cli'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
	"ANN101",  # type annotation for self in method
	"COM812",  # enforce trailing comma
	"D2",  # pydocstyle formatting
	"ISC001",
	"N",  # pep8 naming
	"PLR09",  # pylint refactor too many
	"T201", # print
	"TCH",  # type check blocks
	"W191"  # ignore this to allow tabs
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = ["D", "S101", "E402"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all" # Disallow all relative imports.

[tool.ruff.format]
indent-style = "tab"
docstring-code-format = true
line-ending = "lf"

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.coverage.run]
branch = true

[tool.tox]
legacy_tox_ini = """
[tox]
env_list =
	py311
	py310
	py39
	py38

[testenv]
deps =
	imgcompare
	pytest
commands = pytest tests
"""
